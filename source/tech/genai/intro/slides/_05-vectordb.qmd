# Vector Databases {#vector}

---

### Embedding

* Vectors or Vector Embeddings are numeric representations of data that capture certain features of the data.
* They are arrays of real numbers, of a fixed length generated by machine learning models.
* Process of generating a Vector for a data object is called vectorization.
* For example, "Cat" and "Kitty" have similar meaning based on their semantic similarity, even though the words are very different when compared by letter by letter.

---

### Embedding Models

* Embedding models are algorithms trained to encapsulate information into dense representations ina multi-dimensional space.

#### Techniques

* **Singular Value Decomposition (SVD)**: is an embedding model that transforms a matrix into its singular matrices.
* **Word2Vec**:  is an ML algorithm trained to associate words and represent them in the embedding space.

* **BERT(Bidirectional Encoder Representations from Transformers)**: is a popular language model which generates embeddings for a given text.
  - Developed by Google.

---

### Illustration 

![](images/vectorization.png)

---

### Vector Search - similarity search

![](images/vdbsearch.png)

* For example similarity for "Kitty" results into "Cat".

---

### Distance Measurement Techniques

* **Squared Euclidean or L2-Squared Distance**: calculates the straight-line distance between two vectors.
* **Manhattan or L1 Distance**: calculates the sum of the lengths of the projections of the line segment between the points onto the coordinate axes.
* **Cosine Similarity**: calculates the cosine of the angle between two vectors.
* **Dot product**: calculates teh product of the magnitudes of two vectors and the cosine of the angle between them.
* **Hamming Distance**: calculates the number of differences between vectors at each dimension.

---

### Contd.

![](images/searchtypes.png)

---

### Vector Databases

* A Vector database indexes, stores and provides access to structured or unstructured data (text, images etc) alongside of its vector embeddings.
* Useful for finding and retrieve similar objects quickly at scale.

---

### Popular Vector DBs

| Name | Description |
| --- | --- |
| Chroma | Chroma is a AI-Native open-source vector db focused on developer productivity.|
| Faiss | Facebook AI Similarity Search (Faiss) is a library for efficient similarity search and clustering of dense vectors.|
| Pinecone | Pinecone is a vector database with broad functionality.|
| Qdrant | a popular vector similarity search engine. |
| Weaviate | Weaviate is an open-source vector database allows to store data objects and vector embeddings.|

---

### Creating Embedding

``` python

# Select a Embedding Model

from langchain_openai import OpenAIEmbeddings

embedding = OpenAIEmbeddings(
    model="text-embedding-3-large",
)

# Generate Embedding

embedding_data = embedding.embed_documents(
    ["Cat", "Dog", "Blue", "Yellow", "Elephant", "Tiger", "Rose", "Jasmine"]
)

# Print the Embedding
print(embedding_data[0][:1])

```

---

### Distance 

``` python

from langchain.evaluation import load_evaluator, EmbeddingDistance

evaluator = load_evaluator("embedding_distance")

print(
    evaluator.evaluate_strings(
        prediction="cat", reference="Cricket", embedding=embedding
    )
)
print(
    evaluator.evaluate_strings(
        prediction="cat",
        reference="kitty",
        embedding=embedding,
        distance_metric=EmbeddingDistance.EUCLIDEAN,
    )
)

```

---

[Back to Index](#index)